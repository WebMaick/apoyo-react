import React, { useEffect, useState } from "react";
import { Formulario } from "./components/Formulario";
import { ListCaballeros } from "./components/ListCaballeros";
import { Loader } from "./components/Loader";
import { MsgError } from "./components/MsgError";
import { helpHttp } from "./helpers/helpHttp";
import Swal from "sweetalert2/dist/sweetalert2";
import "sweetalert2/src/sweetalert2.scss";

export const AppCaballeros = () => {
	const [listCaballeros, setListCaballeros] = useState(null);
	const [updateActive, setUpdateActive] = useState(null);
	const [loading, setLoading] = useState(false);
	const [errorData, setErrorData] = useState(null);

	/*=== Inicio de: llamando la bd ===*/
	useEffect(() => {
		setLoading(true);
		helpHttp()
			.get(`http://localhost:5001/caballeros`)
			.then((res) => {
				if (!res.err) {
					setListCaballeros(res);
					setErrorData(null);
				} else {
					setListCaballeros(null);
					setErrorData(res);
					console.log(res);
				}
			});
		setLoading(false);
	}, []);

	/*=== Inicio de: Add Cabalero ===*/
	const addCaballero = (newCaballero) => {
		// console.log(newCaballero);
		let options = {
			body: newCaballero,
			headers: { "content-type": "application/json" },
		};
		helpHttp()
			.post(`http://localhost:5001/caballeros`, options)
			.then((res) => {
				if (!res.err) {
					setListCaballeros([...listCaballeros, res]);
				} else {
					setErrorData(res);
				}
			});
	};

	/*=== Inicio de: Actualiza Caballero ===*/
	const updateCaballero = (caballero) => {
		let options = {
			body: caballero,
			headers: { "content-type": "application/json" },
		};
		helpHttp()
			.put(`http://localhost:5001/caballeros/${caballero.id}`, options)
			.then((res) => {
				// console.log(res);
				if (!res.err) {
					setListCaballeros(
						listCaballeros.map((item) =>
							item.id === caballero.id ? caballero : item,
						),
					);
				} else {
					setErrorData(res);
				}
			});
	};

	/*=== Inicio de: Elimina Caballero ===*/
	const deleteCaballero = (id) => {
		console.log(id);
		let options = {
			headers: { "content-type": "application/json" },
		};
		Swal.fire({
			title: `Esta seguro de Eliminar el id? ${id}`,
			text: "Revise el dato...!",
			icon: "warning",
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			cancelButtonText: "No, Cancelar!",
			confirmButtonText: "Si, Eliminar el ID!",
		}).then((result) => {
			if (result.isConfirmed) {
				Swal.fire("Eliminado!", "Se elimino correctamente.", "success");
				helpHttp()
					.del(`http://localhost:5001/caballeros/${id}`, options)
					.then((res) => {
						console.log(res);
						if (!res.ok) {
							setListCaballeros(
								listCaballeros.filter((item) => item.id !== id),
							);
						} else {
							setErrorData(res);
						}
					});
			}
		});
	};

	return (
		<div className="container">
			<div className="row">
				<div className="col-md-4 mt-3">
					<Formulario
						addCaballero={addCaballero}
						updateCaballero={updateCaballero}
						updateActive={updateActive}
					/>
				</div>
				<div className="col-md-8">
					{loading && <Loader />}
					{errorData && (
						<MsgError
							mensaje={`Error: ${errorData.status}: ${errorData.statusText}`}
						/>
					)}
					{listCaballeros && (
						<ListCaballeros
							listCaballeros={listCaballeros}
							updateCaballero={updateCaballero}
							deleteCaballero={deleteCaballero}
							setUpdateActive={setUpdateActive}
						/>
					)}
				</div>
			</div>
		</div>
	);
};
